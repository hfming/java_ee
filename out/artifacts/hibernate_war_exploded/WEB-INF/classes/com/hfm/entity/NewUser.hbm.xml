<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
<!--    class标签 配置实体类与表的关系-->
<!--    name 属性 配置全类名 -->
<!--    table 属性 数据库表名称-->
    <class name="com.hfm.entity.NewUser" table="t_newUser">
<!--        配置实体类id和表id对应-->
<!--        hibernate要求实体类有一个属性唯一值-->
<!--        hibernate要求表有字段作为唯一值-->
<!--        name 属性 实体类里面id属性名称-->
<!--        column属性 生成的表字段名称-->
        <id name="user_id" column="user_id">
<!--            设置数据库表id增长策略-->
<!--            native 生成表id值就是主键自动增长-->
            <generator class="native"></generator>
        </id>
<!--        配置其他属性和表字段对应-->
<!--        name属性：实体类属性名称-->
<!--        column属性：生成表字段名称-->
        <property name="user_name" column="user_name"></property>
        <property name="user_password" column="user_password"></property>
        <property name="user_state" column="user_state"></property>

<!--        set 标签进行多对多依赖关联-->
<!--        name 属性表示多对多对应的 set集合-->
<!--        table 属性表示关联两张表的第三张表-->
        <set name="roles" table="t_newUser_role" cascade="save-update,delete">
<!--            column 属性表示当前表在第三张表的外键名称-->
            <key column="user_id"></key>
<!--            class 属性表示多对多的实体类-->
<!--            column 属性表示多对多实体类在第三张表的外键名称-->
            <many-to-many class="com.hfm.entity.Role" column="role_id"></many-to-many>
        </set>
    </class>
</hibernate-mapping>