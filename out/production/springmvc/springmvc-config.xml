<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <!--开启注解扫描-->
    <context:component-scan base-package="com.hfm"/>

    <!--    配置视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--   配置跳转的文件所在的目录-->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!--   配置文件的后缀名-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置Thymeleaf视图解析器 -->
    <!--    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">-->
    <!--        <property name="order" value="1"/>-->
    <!--        <property name="characterEncoding" value="UTF-8"/>-->
    <!--        <property name="templateEngine">-->
    <!--            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">-->
    <!--                <property name="templateResolver">-->
    <!--                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">-->
    <!--                        &lt;!&ndash; 视图前缀 &ndash;&gt;-->
    <!--                        <property name="prefix" value="/WEB-INF/templates/"/>-->
    <!--                        &lt;!&ndash; 视图后缀 &ndash;&gt;-->
    <!--                        <property name="suffix" value=".html"/>-->
    <!--                        <property name="templateMode" value="HTML5"/>-->
    <!--                        <property name="characterEncoding" value="UTF-8" />-->
    <!--                    </bean>-->
    <!--                </property>-->
    <!--            </bean>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--    配置静态资源不过滤-->
    <!-- location表示路径，mapping表示文件，**表示该目录下的文件以及子目录的文件 -->
<!--    <mvc:resources location="/css/" mapping="/css/**"/>-->
<!--    <mvc:resources location="/images/" mapping="/images/**"/>-->
<!--    <mvc:resources location="/scripts/" mapping="/scripts/**"/>-->


    <!--
   处理静态资源，例如html、js、css、jpg
  若只设置该标签，则只能访问静态资源，其他请求则无法访问
  此时必须设置<mvc:annotation-driven/>解决问题-->
    <mvc:default-servlet-handler/>

    <!--    开启SpringMvc框架的注解支持-->
    <!-- 开启mvc注解驱动 -->
    <mvc:annotation-driven/>
    <!--    <mvc:annotation-driven>-->
    <!--        <mvc:message-converters>-->
    <!--            &lt;!&ndash; 处理响应中文内容乱码 &ndash;&gt;-->
    <!--            <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--                <property name="defaultCharset" value="UTF-8" />-->
    <!--                <property name="supportedMediaTypes">-->
    <!--                    <list>-->
    <!--                        <value>text/html</value>-->
    <!--                        <value>application/json</value>-->
    <!--                    </list>-->
    <!--                </property>-->
    <!--            </bean>-->
    <!--        </mvc:message-converters>-->
    <!--    </mvc:annotation-driven>-->

    <!-- 配置类型转换器工厂 -->
    <bean id="converterService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <!-- 给工厂注入一个新的类型转换器 -->
        <property name="converters">
            <set>
                <!-- 配置自定义类型转换器 -->
                <bean class="com.hfm.utils.converter.StringToDateConverter"/>
            </set>
        </property>
    </bean>

    <!--    &lt;!&ndash; 引用自定义类型转换器 &ndash;&gt;-->
    <mvc:annotation-driven conversion-service="converterService"/>

    <!--    配置文件解析器对象-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--        上传文件的大小-->
        <property name="maxUploadSize" value="10485760"/>
    </bean>

    <!--    &lt;!&ndash; 配置自定义异常处理器 &ndash;&gt;-->
    <bean id="handlerExceptionResolver" class="com.hfm.exception.MyHandlerException"/>

    <!--     配置拦截器栈 -->
    <mvc:interceptors>
        <!--        配置拦截器1-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;            拦截的地址，具体要拦截的方法&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash;            不要拦截的方法&ndash;&gt;-->
<!--            &lt;!&ndash;            <mvc:exclude-mapping path=""/>&ndash;&gt;-->
<!--            &lt;!&ndash; 注册拦截器对象 &ndash;&gt;-->
<!--            <bean id="loginInterceptor" class="com.hfm.interceptor.LoginInterceptor"/>-->
<!--        </mvc:interceptor>-->
        <!--        配置拦截器1-->
        <mvc:interceptor>
            <!--            拦截的地址，具体要拦截的方法-->
            <mvc:mapping path="/**"/>
            <!--            不要拦截的方法-->
            <!--            <mvc:exclude-mapping path=""/>-->
            <!-- 注册拦截器对象 -->
            <bean id="MyHandlerInterceptor1" class="com.hfm.interceptor.MyHandlerInterceptor1"/>
        </mvc:interceptor>
        <!--        配置拦截器2-->
        <mvc:interceptor>
            <!--            拦截的地址，具体要拦截的方法-->
            <mvc:mapping path="/**"/>
            <!--            不要拦截的方法-->
            <!--            <mvc:exclude-mapping path=""/>-->
            <!-- 注册拦截器对象 -->
            <bean id="myHandlerInterceptor2" class="com.hfm.interceptor.MyHandlerInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>