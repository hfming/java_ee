<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
<!--    class标签 配置实体类与表的关系-->
<!--    name 属性 配置全类名 -->
<!--    table 属性 数据库表名称-->
    <class name="com.hfm.entity.Customer" table="t_customer">
<!--        配置实体类id和表id对应-->
<!--        hibernate要求实体类有一个属性唯一值-->
<!--        hibernate要求表有字段作为唯一值-->
<!--        name 属性 实体类里面id属性名称-->
<!--        column属性 生成的表字段名称-->
        <id name="cust_id" column="cust_id">
<!--            设置数据库表id增长策略-->
<!--            native 生成表id值就是主键自动增长-->
            <generator class="native"></generator>
        </id>
<!--        配置其他属性和表字段对应-->
<!--        name属性：实体类属性名称-->
<!--        column属性：生成表字段名称-->
        <property name="cust_name" column="cust_name"></property>
        <property name="cust_source" column="cust_source"></property>
        <property name="cust_industry" column="cust_industry"></property>
        <property name="cust_level" column="cust_level"></property>
        <property name="cust_phone" column="cust_phone"></property>
        <property name="cust_mobile" column="cust_mobile"></property>

<!--        在客户映射文件中，表示所有联系人-->
<!--        使用 set 标签表示一对多方式-->
<!--        name 属性的属性值使用 实体类中一对多的集合-->
<!--        cascade="save-update" 表示自动级联操作 -->
<!--        fentch 属性延迟查询-->
<!--        lazy 属性延迟查询 true 默认延迟 false 不延迟 extra 极其延迟-->
<!--        batch-size 批处理-->
        <set name="contacts" cascade="save-update,delete" inverse="true" fetch="select" lazy="true" batch-size="2">
<!--            一对多使用外键机制-->
<!--            hibernate 需要双向维护外键,在一对多与多对一配置都需要配置外键-->
<!--            column 属性代表外键名称-->
<!--            外键名称 副表_主表_fk-->
            <key column="cust_cont_fk"></key>
<!--            one-to-many 配置一对多的全路径-->
            <one-to-many class="com.hfm.entity.Contact"></one-to-many>
        </set>
    </class>
</hibernate-mapping>